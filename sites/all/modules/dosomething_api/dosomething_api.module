<?php
  
/**
 * Implements hook_menu()
 */
function dosomething_api_menu() {
  $items['services/%'] = array(
    'page callback' => 'dosomething_api_call',
    'page arguments' => array(1,2),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  return $items;
}

function dosomething_api_call($service_name, $service_id) {
  if (!dosomething_api_check_post($_POST)) {
    $return = dosomething_api_error('You gave me some unsanitary data. Make sure all data is UTF-8.');
    echo json_encode($return);
    return;
  }
 
  $function = '_dosomething_api_call_'.$service_name;

  if (isset($_GET['key']) && in_array($_GET['key'], dosomething_api_keys())) {
    module_load_include('inc', 'dosomething_api');
    if (function_exists($function)) {
      $return = call_user_func($function, $service_id);
    }
    else {
      $return = dosomething_api_error('DoSomething.org does not provide a function of that name.');
    }
  }
  else {
    $return = dosomething_api_error('Invalid API key.', FALSE);
  }

  echo json_encode($return);
}

function dosomething_api_error($message, $vars = TRUE) {
  if (!is_array($message)) $message = array($message);
  $return = array(
    'success' => 'false',
    'message' => $message,
  );
  if ($vars) {
    unset($_GET['q']);
    unset($_GET['key']);
    $return['_POST'] = $_POST;
    $return['_GET'] = $_GET;
  }
  return $return;
}

function dosomething_api_keys() {
  return array(md5('DoSomething.org'));
}

function dosomething_api_check_post(&$check) {
  foreach ($check as &$p) {
    if (!empty($p) && !is_array($p)) {
      $p = filter_xss($p);
      if (empty($p)) {
        return false;
      }
    }
    else if (is_array($p)) {
      // we don't want to just return the function result, because we may not have finished looping.
      // only terminate the loop if we fail the check.
      if (!dosomething_api_check_post($p)) {
        return false;
      }
    }
  }
  return true;
}

function _dosomething_api_wrap_text_field($text, $key_str = 'value') {
  $return = array();
  if (!is_array($text)) {
    $text = array($text);
  }

  foreach ($text as $t) {
    $return[] = array($key_str => $t);
  }
  return $return;
}

function dosomething_api_complete($type) {
  $err = drupal_get_messages();
  if (!empty($err['error'])) {
    return dosomething_api_error($err['error']);
  }
  return array(
    'success' => 'true',
    'call' => $type,
  );
}
