<?php

function dosomething_wf_modify_webform_submission_insert($node, $submission) {
  /*
   * Staples 2011 Sweepstakes submission
   */
  if ($node->nid == 650379) {
    $map = _dosomething_wf_modify_webform_component_mapping($node);
    
    if ($submission->data[$map['share']]['value'][0] != '')
    {
      $node = new StdClass();
      $node->type = 'staples_reason';
      $node->created = time();
      $node->changed = $node->created;
      $node->status = 1;
      $node->promote = 0;
      $node->sticky = 0;
      $node->uid = 1;
      $node->title = $submission->data[$map['share']]['value'][0];
      
      $node->field_name_f[0]['value'] = $submission->data[$map['first_name']]['value'][0];
      $node->field_name_l[0]['value'] = $submission->data[$map['last_name']]['value'][0];
      $node->field_thirteen[0]['value'] = 'yes';
      $node->customGenerated = true;
      node_save($node);
    }
  }
/* Grandparents 2011 -> 2012 */  
 else if ($node->nid == 679707) {
    $map = _dosomething_wf_modify_webform_component_mapping($node);
    $checks = $submission->data[$map['check_boxes']]['value'];
    if (in_array('text', $checks)) {
      ds_mobile_mcommons_optin_campaign($submission->data[$map['phone']]['value'][0], 68611, 79611);
    }
/* END - Grandparents 2011 */	
    if (in_array('email', $checks)) {
        dia_signup(array(
                       'link' => 'groups',
                       'table' => 'supporter',
                       'linkKey' => 105245,
                       'First_Name' => $submission->data[$map['first_name']][0]['value'],
                       'Last_Name' => $submission->data[$map['last_name']][0]['value'],
                       'Email' => $submission->data[$map['email']][0]['value'],
                       'Phone' => $submission->data[$map['phone']][0]['value'],
                       'Zip' => $submission->data[$map['zip']][0]['value']
                     ));
    }
    if (in_array('action_kit', $checks)) {
        $node->webform['redirect_url'] = 'sports/action-kit';
    }
 }
  /*Give a Spit About cancer webform*/
 else if ($node->nid == 682753) {
   $map = _dosomething_wf_modify_webform_component_mapping($node);
   ds_mobile_mcommons_optin_campaign($submission->data[$map['phone']]['value'][0], 67751, 82281);
 }
  /*Give a Spit - Join this Drive webform on Schools Page*/

 else if ($node->nid == 704188) {
      $map = _dosomething_wf_modify_webform_component_mapping($node);
          ds_mobile_mcommons_optin_campaign($submission->data[$map['phone']]['value'][0], 67751, 82281);
 }
 
 
 /*Teens for Jeans Splash*/
 else if ($node->nid == 720997) {
 	 $map = _dosomething_wf_modify_webform_component_mapping($node);
	 
	// send the email to infusionsoft
	include 'isdk.php';
	$app = new iSDK;

	if($app->cfgCon("emaildrop")) {
		// set up the data to send to infusionsoft
		$contact=array('Email' => $submission->data[$map['email']]['value'][0]);
		// apply the Teens for jeans tags
		$actionId = 748;
		//check for existing contact;
		$returnFields = array('Id');
		$dups = $app->findByEmail($contact['Email'], $returnFields);
		/*If email is not a duplicate*/
		if (empty($dups)) {
			// add new contact and add them to the action set
			$dups = $app->addCon($contact);	
			$app->runAS($dups, $actionId);
		} 
		else
		{
			/*If the email is a duplicate*/
			$contactId = $dups[0][Id];
			$app->runAS($contactId, $actionId);
		}
	}
  ds_mobile_mcommons_optin_campaign($submission->data[$map['phone_number']]['value'][0], 74002, 89072);
 }
 else if ($node->nid == 722522) { 
	 $map = _dosomething_wf_modify_webform_component_mapping($node);	 
	// send the email to infusionsoft
	include 'isdk.php';
	$app = new iSDK;

	if($app->cfgCon("emaildrop")) {

		// set up the data to send to infusionsoft
		$contact=array('Email' => $submission->data[$map['email']]['value'][0]);
		
		// apply the Teens for jeans tags
		$actionId = 852;

		//check for existing contact;
		$returnFields = array('Id');
		$dups = $app->findByEmail($contact['Email'], $returnFields);
		
		/*If email is not a duplicate*/
		if (empty($dups)) {
			// add new contact and add them to the action set
			$dups = $app->addCon($contact);	
			$app->runAS($dups, $actionId);
		} 
		else
		{
			/*If the email is a duplicate*/
			/*
			
			$groupId = 734;
			$result = $app->grpAssign($contactId, $groupId);			
			*/
			$contactId = $dups[0][Id];
			$app->runAS($contactId, $actionId);
		}
	}
 } 
 
 /*College Survey webform*/
 else if ($node->nid == 726972) { 
	 $map = _dosomething_wf_modify_webform_component_mapping($node);
	/*Infusionsoft Library*/
	include 'isdk.php';
	$app = new iSDK;

	if($app->cfgCon("emaildrop")) {
		// set up the data to send to infusionsoft
		$contact=array('Email' => $submission->data[$map['email']]['value'][0]);		
		// apply the College Survey tag
		$actionId = 868;
		//check for existing contact;
		$returnFields = array('Id');
		$dups = $app->findByEmail($contact['Email'], $returnFields);
		
		/*If email is not a duplicate*/
		if (empty($dups)) {
			// add new contact and add them to the action set
			$dups = $app->addCon($contact);	
			$app->runAS($dups, $actionId);
		} 
		else
		{
			/*If the email is a duplicate*/			
			$contactId = $dups[0][Id];
			$app->runAS($contactId, $actionId);
		}
	}
 } 
 else if ($node->nid == 731708) {
   $map = _dosomething_wf_modify_webform_component_mapping($node);
   dosomething_functions_infusionsoft(932, $submission->data[$map['enter_your_email_address']]['value'][0]);
 }
}

function _dosomething_wf_modify_webform_component_mapping($node) {
  $mapping = array();
  $components = $node->webform['components'];
  foreach ($components as $i => $component) {
    $key = $component['form_key'];
    $mapping[$key] = $i;
  }
  return $mapping;
}

function dosomething_wf_modify_webform_select_options_info() {
    $items = array();
    $items['user_clubs'] = array(
        'title' => t('User\'s clubs'),
        'options callback' => 'dosomething_wf_modify_options_user_clubs'
    );
    return $items;
}

function dosomething_wf_modify_options_user_clubs() {
    global $user;
    $q = "SELECT n.nid, n.title FROM {og_uid} og JOIN {node} n ON og.nid=n.nid WHERE n.type='club' AND og.uid='{$user->uid}' AND og.is_active=1";
    $rs = db_query($q);
    
    $options = array();
    while ($club = db_fetch_array($rs)) {
        $options[$club['nid']] = $club['title'];
    }
    
    if (count($options) === 0)
        $options[0] = '< Please create a club. >';
    return $options;
}


?>
