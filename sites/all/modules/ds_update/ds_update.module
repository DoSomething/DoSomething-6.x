<?php

function _ds_update_has_index_nid($table) {
  $sql = 'SHOW INDEX FROM {' . $table . '} WHERE Key_name="nid"';
  $row = db_fetch_object(db_query($sql));
  if ($row) {
    return TRUE;
  }
  return FALSE;
}

function check_field_indices() {
  $result = array();
  $fields = content_fields();
  //print '<pre>' . print_r(array_shift($fields), TRUE) . '</pre>';
  foreach ($fields as $field) {
    print '<p>';
    if ($field['db_storage'] != CONTENT_DB_STORAGE_PER_FIELD || _ds_update_has_index_nid('content_' . $field['field_name'])) {
      print 'skipping ' . $field['field_name'] . '...';
    } else {
      print 'adding nid to ' . $field['field_name'];
      db_add_index($result, 'content_' . $field['field_name'], 'nid', array('nid'));
      print '<pre>' . print_r($result, TRUE) . '</pre>';
    }
    print '</p>';
  }
}

function check_type_indices() {
  $result = array();
  $types = content_types();
  //print '<pre>' . print_r(array_shift($types), TRUE) . '</pre>';
  foreach ($types as $type) {
    print '<p>';
    if (_ds_update_has_index_nid('content_type_' . $type['type'])) {
      print 'skipping content_type_' . $type['type'] . '...';
    } else {
      print 'adding nid to content_type_' . $type['type'];
      db_add_index($result, 'content_type_' . $type['type'], 'nid', array('nid'));
      print '<pre>' . print_r($result, TRUE) . '</pre>';
    }
    print '</p>';
  }
}

function check_video_fields() {
  $fields = content_fields();
  print '<pre>' . print_r($fields, TRUE) . '</pre>';
}

function _ds_update_junk() {
  include_once(drupal_get_path('module', 'content') .'/content.install');
  print 'starting...';
  foreach (content_types_install() as $type_name => $type_fields) {
    foreach ($type_fields as $field) { 
      if (in_array($field['module'], array('emvideo', 'emimage', 'emaudio'))) {
        // We only process a given field once.
        $fields[$field['field_name']] = $field;
        print t('Added provider data version to the %field field.', array('%field' => $field['field_name']));
      }
    }     
  }
}
